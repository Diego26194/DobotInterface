<launch>

  <!-- By default, we do not start a database (it can be large) -->
  <arg name="db" default="true" /> <!-- Cambiado a true para iniciar la base de datos -->
  <!-- Allow user to specify database location -->
  <arg name="db_path" default="$(find niryo_moveit_config)/default_warehouse_mongo_db" />

  <!-- By default, we are not in debug mode -->
  <arg name="debug" default="false" />

  <!-- Load the URDF, SRDF and other .yaml configuration files on the param server -->
  <include file="$(find niryo_moveit_config)/launch/planning_context.launch">
    <arg name="load_robot_description" value="true"/>
  </include>

  <!-- New: Publish actual joint states if using real hardware -->
  <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
    <param name="use_gui" value="false"/>
    <!-- Ajusta el source_list si necesitas publicar desde un controlador real -->
    <rosparam param="source_list">[move_group/real_controller_joint_states]</rosparam>
  </node>

  <!-- Given the published joint states, publish tf for the robot links -->
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="true" output="screen" />

  <!-- Run the main MoveIt! executable with trajectory execution and real controller manager -->
  <include file="$(find niryo_moveit_config)/launch/move_group.launch">
    <arg name="allow_trajectory_execution" value="true"/>
    <arg name="info" value="true"/>
    <arg name="debug" value="$(arg debug)"/>
  </include>

  <!-- If database loading was enabled, start the Python node to interact with the database -->
  <node name="coordenadas_node" pkg="niryo_controladores" type="db_puntos.py" output="screen">
    <param name="db" value="$(arg db)" />
    <param name="db_path" value="$(arg db_path)" />
  </node>

</launch>


